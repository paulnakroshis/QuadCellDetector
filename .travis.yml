language: python

matrix:
  include:
    - os: osx
      language: generic
      env: PYTHON_VERSION=3.5.6
    
    - os: osx
      language: generic
      env: PYTHON_VERSION=3.6.8
    
    - os: windows
      language: sh
      env:
        - PATH=/c/Python36:/c/Python36/Scripts:$PATH
        - PYTHON_VERSION=3.6.8
    
    - os: windows
      language: sh
      env:
        - PATH=/c/Python37:/c/Python37/Scripts:$PATH
        - PYTHON_VERSION=3.7.3

    - os: linux
      dist: xenial
      language: python
      python: 3.7

    - os: linux
      dist: xenial
      language: python
      python: 3.6
    
    - os: linux
      dist: xenial
      language: python
      python: 3.5

    - os: linux
      dist: trusty
      language: python
      python: 3.6
    
    - os: linux
      dist: trusty
      language: python
      python: 3.5

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      pip install -U pip;
      pip install --egg --no-binary pyenv pyenv;
      export PATH=~/.pyenv/bin:$PATH;
      eval "$(pyenv init -)";
      pyenv install --skip-existing $PYTHON_VERSION;
      pyenv global $PYTHON_VERSION;
      pyenv shell $PYTHON_VERSION;
      pip install -U pip setuptools wheel py;
    fi
    if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      choco install python --version $PYTHON_VERSION
      python -m pip install --upgrade pip
    fi
  
# command to install dependencies
install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      pip3 install pytest
      pip3 install .
    else
      pip install pytest
      pip install .
    fi

# command to run tests
script:
- pytest -v tests/

deploy:
  skip_existing: true
  provider: pypi
  user: "nyctanthous"
  password:
    secure: "EyGu32EWhdiQqTBywPH9XU7H33vJ8XgZhbgTBrB6Z80BNWXmH+mJyBZiECP43WZpJibncvfSJD6PGpU+LHYe1dE5xPIPNbA8hgb7uuCwZ3H75bRW59HCH2Np1bheU9UaeItWWvnvKumsH12y8WonbsPX4EaRl8HY4gej0jSzQc0APDtJsWq4HflUPg2gzy9KJxIBphFMCLcXmAiT7WPSTA0DNqr7PHvtIJLW4s8j7zI0rMXTRbVzLMxJdeXAz4eidvmVhwNuza9fznxR1xOpTt7wG08r05LZeIYjCfPE/cB/9jjJel5sIT86RjuiVPKigNM+Iuhs7sUYkSsQZXTWCAZUx6qxB7/wTm9LbF5KpxRMYMsV9fClou9Qo2L6aarN/bycxCBFv6DtuX08sa3bOSjMcaXE4JAebhhvw7ZGX2jQzZ52uXTZP8l65ya/boaaG2LE79nUkFF/Y9oJwPEiRHY2VPvz4EaIBRoS01z/MmJm8WKJB/CYMugm3qjwaJHd8e3R+VYZIGIIfObv2vpKSdCy7Da3oLORXymRvO+WTza2+o4hgg5/8S71C2hpaachCxPNEROLDxoN5HCRd9UTLAP9/N9g3aHZ/DKKyhlMUDhZjsnHQOSGEjOZwdX+r39s5GjV9X4rRF9TRpjY9VCFBx+AvH2COdMv18GCzkEZq9I="
